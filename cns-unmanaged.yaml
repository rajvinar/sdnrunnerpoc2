{{- if .Values.azurecnsUnmanaged.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: azure-cns-unmanaged
  name: azure-cns-unmanaged
  namespace: {{ .Release.Namespace }}
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      k8s-app: azure-cns-unmanaged
  template:
    metadata:
      labels:
        k8s-app: azure-cns-unmanaged
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/managed
                operator: In
                values:
                - 'false'
              - key: type
                operator: NotIn
                values:
                - virtual-kubelet
              - key: kubernetes.io/os
                operator: In
                values:
                - linux                
      containers:
      - args:
        - -c
        - tcp://$(CNSIpAddress):$(CNSPort)
        - -t
        - $(CNSLogTarget)
        - -o
        - $(CNSLogDir)
        env:
        - name: CNSIpAddress
          value: 127.0.0.1
        - name: CNSPort
          value: "10090"
        - name: CNSLogTarget
          value: stdoutfile
        - name: CNSLogDir
          value: /var/log
        - name: CNS_CONFIGURATION_PATH
          value: /etc/azure-cns/cns_config.json
        - name: NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_CIDRs
          value: {{ .Values.azurecnsUnmanaged.podCIDRs }}
        - name: SERVICE_CIDRs
          value: {{ .Values.azurecnsUnmanaged.serviceCIDRs }}
        - name: INFRA_VNET_CIDRs
          value: {{ .Values.azurecnsUnmanaged.infraVnetCIDRs }}
        image: mcr.microsoft.com/containernetworking/azure-cns:{{ .Values.azurecnsUnmanaged.version }}
        imagePullPolicy: IfNotPresent
        name: cns-container
        ports:
        - containerPort: 10090
          name: api
          protocol: TCP
        - containerPort: 10092
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 40m
            memory: 250Mi
          requests:
            cpu: 40m
            memory: 250Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/log
          name: log
        - mountPath: /var/lib/azure-network
          name: cns-state
        - mountPath: /etc/azure-cns
          name: cns-config
        - mountPath: /opt/cni/bin
          name: cni-bin
        - mountPath: /var/run/azure-vnet
          name: azure-vnet
        - mountPath: /var/lock/azure-vnet
          name: cni-lock
        - mountPath: /var/run/azure-vnet.json
          name: legacy-cni-state
        - mountPath: /etc/cni/net.d
          name: cni-conflist
      dnsPolicy: ClusterFirst
      hostNetwork: true
      initContainers:  
      - name: install-cnis
        image: nexusstaticacr.azurecr.io/rancher/hardened-cni-plugins:v1.4.1-build20240325
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-bin
        env:
        - name: SKIP_CNI_BINARIES
          value: "bandwidth,bridge,dhcp,flannel,host-device,host-local,ipvlan,macvlan,ptp,sbr,static,tuning,vlan,vrf,tap,dummy"
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL     
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
          limits:
            cpu: 10m
            memory: 10Mi       
      - args:
        - deploy
        - --skip-verify
        - azure-vnet
        - -o
        - /opt/cni/bin/azure-vnet
        - azure-vnet-telemetry
        - -o
        - /opt/cni/bin/azure-vnet-telemetry
        - azure-swift.conflist
        - -o
        - /etc/cni/net.d/15-azure-swift.conflist
        command:
        - /dropgz
        image: mcr.microsoft.com/containernetworking/azure-cni:{{ .Values.azurecnsUnmanaged.version }}
        imagePullPolicy: IfNotPresent
        name: cni-installer
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/cni/bin
          name: cni-bin
        - mountPath: /etc/cni/net.d
          name: cni-conflist
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: azure-cns
      serviceAccountName: azure-cns
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /var/log/azure-cns
          type: DirectoryOrCreate
        name: log
      - hostPath:
          path: /var/lib/azure-network
          type: DirectoryOrCreate
        name: cns-state
      - hostPath:
          path: /opt/cni/bin
          type: Directory
        name: cni-bin
      - hostPath:
          path: /var/run/azure-vnet
          type: DirectoryOrCreate
        name: azure-vnet
      - hostPath:
          path: /var/lock/azure-vnet
          type: DirectoryOrCreate
        name: cni-lock
      - hostPath:
          path: /var/run/azure-vnet.json
          type: FileOrCreate
        name: legacy-cni-state
      - hostPath:
          path: /etc/cni/net.d
          type: Directory
        name: cni-conflist
      - configMap:
          defaultMode: 420
          name: cns-config
        name: cns-config
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 2%
    type: RollingUpdate
{{- end }}